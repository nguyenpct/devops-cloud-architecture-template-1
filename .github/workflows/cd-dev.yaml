name: Deploy / Dev / nest-prisma

on:
  workflow_run:
    workflows:
      - CI
    types:
      - completed
  workflow_dispatch:
    inputs:
      branch:
        description: Source branch
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: dev-pct
      GKE_CLUSTER: my-first-cluster-2
      GKE_REGION: us-central1-c
      IMAGE: nest-prisma
      IMAGE_TAG: gcr.io/dev-pct/nest-prisma:${GITHUB_SHA}
      # PERMIT_IP_ALWAYS: ${{ secrets.DEV_PERMIT_IP_ALWAYS }}
      WORKLOAD_IDENTITY_PROVIDER: projects/841616085434/locations/global/workloadIdentityPools/thien-test-gke/providers/thien-test-gke-provider-2
      SERVICE_ACCOUNT: thien-test-gke@dev-pct.iam.gserviceaccount.com
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x
      - name: Show event name
        run: echo "Deployment is triggered by $EVENT_NAME"
        env:
          EVENT_NAME: ${{ github.event_name }}
      - id: auth_gcloud
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: access_token
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: "gke-gcloud-auth-plugin"
      - name: Use gcloud CLI
        run: gcloud info
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth_gcloud.outputs.access_token }}
      - name: Docker Build
        run: |-
          docker build \
          --tag ${{ env.IMAGE_TAG }} \
          --build-arg GITHUB_SHA="${GITHUB_SHA}" \
          --build-arg GITHUB_REF="${GITHUB_REF}" . \
          -f Dockerfile
      - name: Publish
        run: |-
          docker push ${{ env.IMAGE_TAG }}
      # - name: Permit to access to the cluster
      #   run: |-
      #     BUILDER_IP="$(curl https://inet-ip.info)"
      #     # excurl https://inet-ip.info >> $BUILDER_IP
      #     gcloud container clusters update ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_REGION }} \
      #             --enable-master-authorized-networks --master-authorized-networks=${{ env.PERMIT_IP_ALWAYS }},$BUILDER_IP/32
      - name: Setup GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}
          project_id: ${{ env.PROJECT_ID }}
          use_auth_provider: true
      - name: Install Skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v2.3.1/skaffold-linux-amd64
          chmod +x skaffold
          sudo mv skaffold /usr/local/bin
      - name: Deploy skaffold
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
            --zone ${{ env.GKE_REGION }} \
            --project ${{ env.PROJECT_ID }}
          cd deploy
          skaffold render --images="${{ env.IMAGE_NAME }}=${{ env.IMAGE_TAG }}" --profile dev -o deployment.yaml
          cat deployment.yaml
          skaffold apply deployment.yaml
          cd ..Ã¥
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
          IMAGE_NAME: gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}
      - name: Restrict to access to the cluster
        run: |-
          gcloud container clusters update ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_REGION }} \
                  --enable-master-authorized-networks --master-authorized-networks=${{ env.PERMIT_IP_ALWAYS }}
      # - name: Clean old images
      #   uses: pcae/gcp-clean-old-versions-action@v1.3.1
      #   with:
      #     resource_type: "container"
      #     project_id: ${{ env.PROJECT_ID }}
      #     service_name: ${{ env.IMAGE }}
      #     keep_count: 3
      #     include_tags: true
    